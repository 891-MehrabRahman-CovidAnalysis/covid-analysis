[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Roger3\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Roger3\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.4 (AdoptOpenJDK Java 1.8.0_265)
[debug]       Load.loadUnit: plugins took 260.8524ms
[debug]       Load.loadUnit: defsScala took 0.5258ms
[debug] [Loading] Scanning directory C:\Users\Roger3\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Roger3\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 45.8237 ms
[debug]           Load.resolveProject(global-plugins) took 101.5784ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Roger3\.sbt\1.0\plugins, plugins: List(<none>))) took 205.8777ms
[debug] [Loading] Done in C:\Users\Roger3\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 373.58ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4031ms
[debug]     Load.loadUnit(file:/C:/Users/Roger3/.sbt/1.0/plugins/, ...) took 651.2832ms
[debug]   Load.apply: load took 992.3705ms
[debug]   Load.apply: resolveProjects took 21.5392ms
[debug]   Load.apply: finalTransforms took 211.4937ms
[debug]   Load.apply: config.delegates took 13.8059ms
[debug]   Load.apply: Def.make(settings)... took 1631.4713ms
[debug]   Load.apply: structureIndex took 258.2367ms
[debug]   Load.apply: mkStreams took 5.5914ms
[info] loading global plugins from C:\Users\Roger3\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6541.2204ms
[debug]           Load.loadUnit: plugins took 60.0605ms
[debug]           Load.loadUnit: defsScala took 0.0104ms
[debug] [Loading] Scanning directory C:\Users\Roger3\revgit\pj3Git\201005-reston-bigdata\OrangeTeamPart\project
[debug]             Load.loadUnit: mkEval took 15.9323ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Roger3\revgit\pj3Git\201005-reston-bigdata\OrangeTeamPart\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 6.6084 ms
[info] loading settings for project orangeteampart-build from idea.sbt ...
[debug]               Load.resolveProject(orangeteampart-build) took 7.9851ms
[debug]             Load.loadTransitive: finalizeProject(Project(id orangeteampart-build, base: C:\Users\Roger3\revgit\pj3Git\201005-reston-bigdata\OrangeTeamPart\project, plugins: List(<none>))) took 16.4519ms
[debug] [Loading] Done in C:\Users\Roger3\revgit\pj3Git\201005-reston-bigdata\OrangeTeamPart\project, returning: (orangeteampart-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4797.8465ms
[debug]           Load.loadUnit: cleanEvalClasses took 20.5485ms
[debug]         Load.loadUnit(file:/C:/Users/Roger3/revgit/pj3Git/201005-reston-bigdata/OrangeTeamPart/project/, ...) took 4880.5756ms
[debug]       Load.apply: load took 4887.6065ms
[debug]       Load.apply: resolveProjects took 0.4988ms
[debug]       Load.apply: finalTransforms took 16.7515ms
[debug]       Load.apply: config.delegates took 0.4426ms
[debug]       Load.apply: Def.make(settings)... took 223.5596ms
[debug]       Load.apply: structureIndex took 63.8221ms
[debug]       Load.apply: mkStreams took 0.0036ms
[info] loading project definition from C:\Users\Roger3\revgit\pj3Git\201005-reston-bigdata\OrangeTeamPart\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5693.5859ms
[debug]     Load.loadUnit: defsScala took 0.0059ms
[debug] [Loading] Scanning directory C:\Users\Roger3\revgit\pj3Git\201005-reston-bigdata\OrangeTeamPart
[debug]       Load.loadUnit: mkEval took 0.3901ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Roger3\revgit\pj3Git\201005-reston-bigdata\OrangeTeamPart, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.2332 ms
[info] loading settings for project orangeteampart from build.sbt ...
[debug]         Load.resolveProject(orangeteampart) took 290.0199ms
[debug]       Load.loadTransitive: finalizeProject(Project(id orangeteampart, base: C:\Users\Roger3\revgit\pj3Git\201005-reston-bigdata\OrangeTeamPart, plugins: List(<none>))) took 295.2931ms
[debug] [Loading] Done in C:\Users\Roger3\revgit\pj3Git\201005-reston-bigdata\OrangeTeamPart, returning: (orangeteampart)
[debug]     Load.loadUnit: loadedProjectsRaw took 2614.9325ms
[debug]     Load.loadUnit: cleanEvalClasses took 25.6665ms
[debug]   Load.loadUnit(file:/C:/Users/Roger3/revgit/pj3Git/201005-reston-bigdata/OrangeTeamPart/, ...) took 8335.0754ms
[debug] Load.apply: load took 8337.7355ms
[debug] Load.apply: resolveProjects took 0.1336ms
[debug] Load.apply: finalTransforms took 53.1034ms
[debug] Load.apply: config.delegates took 0.5551ms
[debug] Load.apply: Def.make(settings)... took 136.2604ms
[debug] Load.apply: structureIndex took 48.8871ms
[debug] Load.apply: mkStreams took 0.0042ms
[info] set current project to OrangeTeamPart (in build file:/C:/Users/Roger3/revgit/pj3Git/201005-reston-bigdata/OrangeTeamPart/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 62682 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 62682, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to OrangeTeamPart (in build file:/C:/Users/Roger3/revgit/pj3Git/201005-reston-bigdata/OrangeTeamPart/)
[debug] > Exec(idea-shell, None, None)
